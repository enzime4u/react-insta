{"ast":null,"code":"var _jsxFileName = \"/Users/liviu/dev/react-insta/src/components/PostImage.js\";\nimport React from 'react';\n\nvar PostImage = function PostImage(props) {\n  // deci din PostContainer, ar trebuiii sa ai ca props:\n  // uploadImage, pentru ca nu te uiti la datele care tii le trimiti, ci te uiti la \n  // atributes care dai la component\n  var uploadImage = props.uploadImage; // aici, tu te gandesti la upload_image, pentru ca tu ai obiectul asa! din server....\n  // dar tu ar trebuii sa te gandesti, numai la component...\n  // adica, un component poati sal folosesti in mai multe locuri,\n  // unde ai putea sa-i trimiti date din mai multe rezurse...\n  // asa ca, in loc sa te gandesti la date, \n  // gandestete mai bine cum vrei ca Componentul tau sa aiba informatiile... \n  // adica prin props...\n  // aici, trebue sa te gandesti numai la props, indiferent care sunt datele care le contine\n  // asa ca \n  // tu ai trimis uploadImage ca atribute in PostContainer...\n  // si aici, ca props, ca atribute, tot ala ai!!!!\n  // upload_image, este gresit... asta este obiectul din server....\n  // dar tu ai trimis uploadImage ca props... \n  // te incurci cu datele... astai problema ta, nu cu propsuriile....\n  // in PostContainer tu ai asta:\n  // <PostImage uploadImage={postData.upload_image} />\n  // tu trimiti o informatie prin props: uploadImage, care ca date are o String\n  // asa ca in PostImage, tu stii ca trebue sa primesti un string prin props.. \n  // uploadImage.. \n  // aici trebue sa fii sigur ca primesti 'uploadImage' ca atribute/props\n  // si nuu upload_image.. este o mare diferenta\n\n  console.log('upload_image', upload_image);\n  return React.createElement(\"img\", {\n    src: uploadImage,\n    alt: \"uploaded pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  });\n};\n\nexport default PostImage;","map":{"version":3,"sources":["/Users/liviu/dev/react-insta/src/components/PostImage.js"],"names":["React","PostImage","props","uploadImage","console","log","upload_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B;AACA;AACA;AAH2B,MAMnBC,WANmB,GAMHD,KANG,CAMnBC,WANmB,EAMG;AAC9B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,YAA5B;AACA,SACE;AAAK,IAAA,GAAG,EAAEH,WAAV;AAAuB,IAAA,GAAG,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAzCD;;AA2CA,eAAeF,SAAf","sourcesContent":["import React from 'react'\n\nconst PostImage = (props) => {\n  // deci din PostContainer, ar trebuiii sa ai ca props:\n  // uploadImage, pentru ca nu te uiti la datele care tii le trimiti, ci te uiti la \n  // atributes care dai la component\n\n\n  const { uploadImage } = props // aici, tu te gandesti la upload_image, pentru ca tu ai obiectul asa! din server....\n  // dar tu ar trebuii sa te gandesti, numai la component...\n  // adica, un component poati sal folosesti in mai multe locuri,\n  // unde ai putea sa-i trimiti date din mai multe rezurse...\n  // asa ca, in loc sa te gandesti la date, \n  // gandestete mai bine cum vrei ca Componentul tau sa aiba informatiile... \n  // adica prin props...\n\n  // aici, trebue sa te gandesti numai la props, indiferent care sunt datele care le contine\n  // asa ca \n  // tu ai trimis uploadImage ca atribute in PostContainer...\n  // si aici, ca props, ca atribute, tot ala ai!!!!\n\n  // upload_image, este gresit... asta este obiectul din server....\n  // dar tu ai trimis uploadImage ca props... \n\n  // te incurci cu datele... astai problema ta, nu cu propsuriile....\n\n\n  // in PostContainer tu ai asta:\n  // <PostImage uploadImage={postData.upload_image} />\n\n  // tu trimiti o informatie prin props: uploadImage, care ca date are o String\n\n  // asa ca in PostImage, tu stii ca trebue sa primesti un string prin props.. \n  // uploadImage.. \n\n  // aici trebue sa fii sigur ca primesti 'uploadImage' ca atribute/props\n  // si nuu upload_image.. este o mare diferenta\n  \n\n  console.log('upload_image', upload_image)\n  return(\n    <img src={uploadImage} alt=\"uploaded pic\"/>\n  )\n}\n\nexport default PostImage"]},"metadata":{},"sourceType":"module"}